{"version":3,"sources":["webpack://vue-glide/webpack/universalModuleDefinition","webpack://vue-glide/webpack/bootstrap","webpack://vue-glide/./node_modules/@vue/cli-service/lib/commands/build/setPublicPath.js","webpack://vue-glide/./node_modules/@glidejs/glide/dist/glide.esm.js","webpack://vue-glide/./src/components/events.js","webpack://vue-glide/./src/components/Glide.js","webpack://vue-glide/./src/components/GlideSlide.vue?dff3","webpack://vue-glide/src/components/GlideSlide.vue","webpack://vue-glide/./src/components/GlideSlide.vue?21b4","webpack://vue-glide/./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack://vue-glide/./src/components/GlideSlide.vue","webpack://vue-glide/./src/index.js","webpack://vue-glide/./node_modules/@vue/cli-service/lib/commands/build/entry-lib.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","window","document","currentScript","src","match","defaults","type","startAt","perView","focusAt","gap","autoplay","hoverpause","keyboard","bound","swipeThreshold","dragThreshold","perTouch","touchRatio","touchAngle","animationDuration","rewind","rewindDuration","animationTimingFunc","throttle","direction","peek","breakpoints","classes","ltr","rtl","slider","carousel","swipeable","dragging","cloneSlide","activeNav","activeSlide","disabledArrow","warn","msg","console","error","_typeof","iterator","obj","constructor","classCallCheck","instance","Constructor","TypeError","createClass","defineProperties","target","props","length","descriptor","configurable","writable","protoProps","staticProps","_extends","assign","arguments","source","receiver","Function","desc","getOwnPropertyDescriptor","undefined","parent","getPrototypeOf","inherits","subClass","superClass","setPrototypeOf","__proto__","possibleConstructorReturn","ReferenceError","toInt","parseInt","toFloat","parseFloat","isString","isObject","isNumber","isFunction","isUndefined","isArray","Array","mount","glide","extensions","events","components","_name","prop","definition","sortKeys","keys","sort","reduce","k","mergeOptions","settings","options","EventsBus","hop","event","handler","on","index","push","remove","context","emit","forEach","item","Glide","selector","_c","_t","_e","disabled","transformers","pattern","Run","make","distance","Transition","disable","Move","interval","_o","set","_i","_d","status","Components","Events","move","_this","calculate","after","isOffset","enable","steps","countableSteps","isEnd","isType","Math","min","isStart","_m","substr","Html","slides","now","Date","getTime","func","wait","timeout","args","result","previous","later","leading","apply","throttled","at","remaining","clearTimeout","trailing","setTimeout","cancel","MARGIN_TYPE","Gaps","len","style","Direction","marginLeft","marginRight","Sizes","wrapper","children","siblings","node","parentNode","firstChild","matched","nextSibling","nodeType","exist","HTMLElement","TRACK_SELECTOR","track","querySelector","slice","filter","slide","classList","contains","_r","Peek","_v","before","offset","movement","slideWidth","translate","is","setupSlides","width","setupWrapper","dimention","wrapperSize","offsetWidth","grow","Clones","reductor","Build","typeClass","activeClass","add","sibling","removeClasses","items","collect","_Glide$settings","peekIncrementer","part","start","end","max","floor","clone","cloneNode","_clone","unshift","append","_Components$Html","half","prepend","reverse","appendChild","_i2","insertBefore","_i3","removeChild","EventsBinder","listeners","el","closure","capture","addEventListener","removeEventListener","Resize","Binder","unbind","off","destroy","VALID_DIRECTIONS","FLIPED_MOVEMENTS",">","<","=","resolve","token","split","join","addClass","removeClass","indexOf","Rtl","modify","Gap","Grow","Peeking","Focusing","mutator","TRANSFORMERS","concat","mutate","transformer","Translate","transform","compose","duration","transition","callback","supportsPassive","opts","e","supportsPassive$1","START_EVENTS","MOVE_EVENTS","END_EVENTS","MOUSE_EVENTS","Swipe","swipeSin","swipeStartX","swipeStartY","moveable","passive","bindSwipeStart","swipe","touches","pageX","pageY","bindSwipeMove","bindSwipeEnd","subExSx","subEySy","powEX","abs","powEY","swipeHypotenuse","sqrt","swipeCathetus","asin","PI","stopPropagation","threshold","swipeDistance","swipeDeg","round","unbindSwipeMove","unbindSwipeEnd","unbindSwipeStart","_this2","_this3","changedTouches","Images","dragstart","preventDefault","Anchors","detached","prevented","_a","querySelectorAll","click","detach","draggable","setAttribute","getAttribute","removeAttribute","attach","NAV_SELECTOR","CONTROLS_SELECTOR","Controls","_n","addBindings","setActive","removeActive","controls","removeBindings","elements","currentTarget","Keyboard","press","keyCode","Autoplay","setInterval","stop","time","clearInterval","sortBreakpoints","points","Breakpoints","matchMedia","point","matches","COMPONENTS","Glide$1","_Core","Glide$$1","glide_esm","components_Glide","model","String","default","Number","Boolean","toSlideByClick","bullet","active","provide","data","render","h","control","buttons","$slots","componentOptions","tag","attrs","data-glide-el","slidesCount","data-glide-dir","class","watch","changeSlideByModel","computed","currentSlide","mounted","init","methods","defaultClasses","initOptions","$props","mergedOptions","goToSlideByClick","$el","eventConnector","bindModel","go","$on","map","emitter","replace","$emit","_vm","_h","$createElement","_self","staticClass","data-glide-index","$event","staticRenderFns","GlideSlidevue_type_script_lang_js_","inject","$parent","$children","findIndex","_uid","components_GlideSlidevue_type_script_lang_js_","normalizeComponent","scriptExports","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","_compiled","functional","_scopeId","$vnode","ssrContext","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","$root","$options","shadowRoot","_injectStyles","originalRender","existing","beforeCreate","component","GlideSlide","install","Vue","__webpack_exports__"],"mappings":"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","file":"vue-glide.umd.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"vue-glide\"] = factory();\n\telse\n\t\troot[\"vue-glide\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"fb15\");\n","// This file is imported into lib/wc client bundles.\n\nif (typeof window !== 'undefined') {\n  var i\n  if ((i = window.document.currentScript) && (i = i.src.match(/(.+\\/)[^/]+\\.js(\\?.*)?$/))) {\n    __webpack_public_path__ = i[1] // eslint-disable-line\n  }\n}\n\n// Indicate to webpack that this file can be concatenated\nexport default null\n","/*!\n * Glide.js v3.2.4\n * (c) 2013-2018 Jędrzej Chałubek <jedrzej.chalubek@gmail.com> (http://jedrzejchalubek.com/)\n * Released under the MIT License.\n */\n\nvar defaults = {\n  /**\n   * Type of the movement.\n   *\n   * Available types:\n   * `slider` - Rewinds slider to the start/end when it reaches the first or last slide.\n   * `carousel` - Changes slides without starting over when it reaches the first or last slide.\n   *\n   * @type {String}\n   */\n  type: 'slider',\n\n  /**\n   * Start at specific slide number defined with zero-based index.\n   *\n   * @type {Number}\n   */\n  startAt: 0,\n\n  /**\n   * A number of slides visible on the single viewport.\n   *\n   * @type {Number}\n   */\n  perView: 1,\n\n  /**\n   * Focus currently active slide at a specified position in the track.\n   *\n   * Available inputs:\n   * `center` - Current slide will be always focused at the center of a track.\n   * `0,1,2,3...` - Current slide will be focused on the specified zero-based index.\n   *\n   * @type {String|Number}\n   */\n  focusAt: 0,\n\n  /**\n   * A size of the gap added between slides.\n   *\n   * @type {Number}\n   */\n  gap: 10,\n\n  /**\n   * Change slides after a specified interval. Use `false` for turning off autoplay.\n   *\n   * @type {Number|Boolean}\n   */\n  autoplay: false,\n\n  /**\n   * Stop autoplay on mouseover event.\n   *\n   * @type {Boolean}\n   */\n  hoverpause: true,\n\n  /**\n   * Allow for changing slides with left and right keyboard arrows.\n   *\n   * @type {Boolean}\n   */\n  keyboard: true,\n\n  /**\n   * Stop running `perView` number of slides from the end. Use this\n   * option if you don't want to have an empty space after\n   * a slider. Works only with `slider` type and a\n   * non-centered `focusAt` setting.\n   *\n   * @type {Boolean}\n   */\n  bound: false,\n\n  /**\n   * Minimal swipe distance needed to change the slide. Use `false` for turning off a swiping.\n   *\n   * @type {Number|Boolean}\n   */\n  swipeThreshold: 80,\n\n  /**\n   * Minimal mouse drag distance needed to change the slide. Use `false` for turning off a dragging.\n   *\n   * @type {Number|Boolean}\n   */\n  dragThreshold: 120,\n\n  /**\n   * A maximum number of slides to which movement will be made on swiping or dragging. Use `false` for unlimited.\n   *\n   * @type {Number|Boolean}\n   */\n  perTouch: false,\n\n  /**\n   * Moving distance ratio of the slides on a swiping and dragging.\n   *\n   * @type {Number}\n   */\n  touchRatio: 0.5,\n\n  /**\n   * Angle required to activate slides moving on swiping or dragging.\n   *\n   * @type {Number}\n   */\n  touchAngle: 45,\n\n  /**\n   * Duration of the animation in milliseconds.\n   *\n   * @type {Number}\n   */\n  animationDuration: 400,\n\n  /**\n   * Allows looping the `slider` type. Slider will rewind to the first/last slide when it's at the start/end.\n   *\n   * @type {Boolean}\n   */\n  rewind: true,\n\n  /**\n   * Duration of the rewinding animation of the `slider` type in milliseconds.\n   *\n   * @type {Number}\n   */\n  rewindDuration: 800,\n\n  /**\n   * Easing function for the animation.\n   *\n   * @type {String}\n   */\n  animationTimingFunc: 'cubic-bezier(.165, .840, .440, 1)',\n\n  /**\n   * Throttle costly events at most once per every wait milliseconds.\n   *\n   * @type {Number}\n   */\n  throttle: 10,\n\n  /**\n   * Moving direction mode.\n   *\n   * Available inputs:\n   * - 'ltr' - left to right movement,\n   * - 'rtl' - right to left movement.\n   *\n   * @type {String}\n   */\n  direction: 'ltr',\n\n  /**\n   * The distance value of the next and previous viewports which\n   * have to peek in the current view. Accepts number and\n   * pixels as a string. Left and right peeking can be\n   * set up separately with a directions object.\n   *\n   * For example:\n   * `100` - Peek 100px on the both sides.\n   * { before: 100, after: 50 }` - Peek 100px on the left side and 50px on the right side.\n   *\n   * @type {Number|String|Object}\n   */\n  peek: 0,\n\n  /**\n   * Collection of options applied at specified media breakpoints.\n   * For example: display two slides per view under 800px.\n   * `{\n   *   '800px': {\n   *     perView: 2\n   *   }\n   * }`\n   */\n  breakpoints: {},\n\n  /**\n   * Collection of internally used HTML classes.\n   *\n   * @todo Refactor `slider` and `carousel` properties to single `type: { slider: '', carousel: '' }` object\n   * @type {Object}\n   */\n  classes: {\n    direction: {\n      ltr: 'glide--ltr',\n      rtl: 'glide--rtl'\n    },\n    slider: 'glide--slider',\n    carousel: 'glide--carousel',\n    swipeable: 'glide--swipeable',\n    dragging: 'glide--dragging',\n    cloneSlide: 'glide__slide--clone',\n    activeNav: 'glide__bullet--active',\n    activeSlide: 'glide__slide--active',\n    disabledArrow: 'glide__arrow--disabled'\n  }\n};\n\n/**\n * Outputs warning message to the bowser console.\n *\n * @param  {String} msg\n * @return {Void}\n */\nfunction warn(msg) {\n  console.error(\"[Glide warn]: \" + msg);\n}\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar get = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n/**\n * Converts value entered as number\n * or string to integer value.\n *\n * @param {String} value\n * @returns {Number}\n */\nfunction toInt(value) {\n  return parseInt(value);\n}\n\n/**\n * Converts value entered as number\n * or string to flat value.\n *\n * @param {String} value\n * @returns {Number}\n */\nfunction toFloat(value) {\n  return parseFloat(value);\n}\n\n/**\n * Indicates whether the specified value is a string.\n *\n * @param  {*}   value\n * @return {Boolean}\n */\nfunction isString(value) {\n  return typeof value === 'string';\n}\n\n/**\n * Indicates whether the specified value is an object.\n *\n * @param  {*} value\n * @return {Boolean}\n *\n * @see https://github.com/jashkenas/underscore\n */\nfunction isObject(value) {\n  var type = typeof value === 'undefined' ? 'undefined' : _typeof(value);\n\n  return type === 'function' || type === 'object' && !!value; // eslint-disable-line no-mixed-operators\n}\n\n/**\n * Indicates whether the specified value is a number.\n *\n * @param  {*} value\n * @return {Boolean}\n */\nfunction isNumber(value) {\n  return typeof value === 'number';\n}\n\n/**\n * Indicates whether the specified value is a function.\n *\n * @param  {*} value\n * @return {Boolean}\n */\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n\n/**\n * Indicates whether the specified value is undefined.\n *\n * @param  {*} value\n * @return {Boolean}\n */\nfunction isUndefined(value) {\n  return typeof value === 'undefined';\n}\n\n/**\n * Indicates whether the specified value is an array.\n *\n * @param  {*} value\n * @return {Boolean}\n */\nfunction isArray(value) {\n  return value.constructor === Array;\n}\n\n/**\n * Creates and initializes specified collection of extensions.\n * Each extension receives access to instance of glide and rest of components.\n *\n * @param {Object} glide\n * @param {Object} extensions\n *\n * @returns {Object}\n */\nfunction mount(glide, extensions, events) {\n  var components = {};\n\n  for (var name in extensions) {\n    if (isFunction(extensions[name])) {\n      components[name] = extensions[name](glide, components, events);\n    } else {\n      warn('Extension must be a function');\n    }\n  }\n\n  for (var _name in components) {\n    if (isFunction(components[_name].mount)) {\n      components[_name].mount();\n    }\n  }\n\n  return components;\n}\n\n/**\n * Defines getter and setter property on the specified object.\n *\n * @param  {Object} obj         Object where property has to be defined.\n * @param  {String} prop        Name of the defined property.\n * @param  {Object} definition  Get and set definitions for the property.\n * @return {Void}\n */\nfunction define(obj, prop, definition) {\n  Object.defineProperty(obj, prop, definition);\n}\n\n/**\n * Sorts aphabetically object keys.\n *\n * @param  {Object} obj\n * @return {Object}\n */\nfunction sortKeys(obj) {\n  return Object.keys(obj).sort().reduce(function (r, k) {\n    r[k] = obj[k];\n\n    return r[k], r;\n  }, {});\n}\n\n/**\n * Merges passed settings object with default options.\n *\n * @param  {Object} defaults\n * @param  {Object} settings\n * @return {Object}\n */\nfunction mergeOptions(defaults, settings) {\n  var options = _extends({}, defaults, settings);\n\n  // `Object.assign` do not deeply merge objects, so we\n  // have to do it manually for every nested object\n  // in options. Although it does not look smart,\n  // it's smaller and faster than some fancy\n  // merging deep-merge algorithm script.\n  if (settings.hasOwnProperty('classes')) {\n    options.classes = _extends({}, defaults.classes, settings.classes);\n\n    if (settings.classes.hasOwnProperty('direction')) {\n      options.classes.direction = _extends({}, defaults.classes.direction, settings.classes.direction);\n    }\n  }\n\n  if (settings.hasOwnProperty('breakpoints')) {\n    options.breakpoints = _extends({}, defaults.breakpoints, settings.breakpoints);\n  }\n\n  return options;\n}\n\nvar EventsBus = function () {\n  /**\n   * Construct a EventBus instance.\n   *\n   * @param {Object} events\n   */\n  function EventsBus() {\n    var events = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, EventsBus);\n\n    this.events = events;\n    this.hop = events.hasOwnProperty;\n  }\n\n  /**\n   * Adds listener to the specifed event.\n   *\n   * @param {String|Array} event\n   * @param {Function} handler\n   */\n\n\n  createClass(EventsBus, [{\n    key: 'on',\n    value: function on(event, handler) {\n      if (isArray(event)) {\n        for (var i = 0; i < event.length; i++) {\n          this.on(event[i], handler);\n        }\n      }\n\n      // Create the event's object if not yet created\n      if (!this.hop.call(this.events, event)) {\n        this.events[event] = [];\n      }\n\n      // Add the handler to queue\n      var index = this.events[event].push(handler) - 1;\n\n      // Provide handle back for removal of event\n      return {\n        remove: function remove() {\n          delete this.events[event][index];\n        }\n      };\n    }\n\n    /**\n     * Runs registered handlers for specified event.\n     *\n     * @param {String|Array} event\n     * @param {Object=} context\n     */\n\n  }, {\n    key: 'emit',\n    value: function emit(event, context) {\n      if (isArray(event)) {\n        for (var i = 0; i < event.length; i++) {\n          this.emit(event[i], context);\n        }\n      }\n\n      // If the event doesn't exist, or there's no handlers in queue, just leave\n      if (!this.hop.call(this.events, event)) {\n        return;\n      }\n\n      // Cycle through events queue, fire!\n      this.events[event].forEach(function (item) {\n        item(context || {});\n      });\n    }\n  }]);\n  return EventsBus;\n}();\n\nvar Glide = function () {\n  /**\n   * Construct glide.\n   *\n   * @param  {String} selector\n   * @param  {Object} options\n   */\n  function Glide(selector) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, Glide);\n\n    this._c = {};\n    this._t = [];\n    this._e = new EventsBus();\n\n    this.disabled = false;\n    this.selector = selector;\n    this.settings = mergeOptions(defaults, options);\n    this.index = this.settings.startAt;\n  }\n\n  /**\n   * Initializes glide.\n   *\n   * @param {Object} extensions Collection of extensions to initialize.\n   * @return {Glide}\n   */\n\n\n  createClass(Glide, [{\n    key: 'mount',\n    value: function mount$$1() {\n      var extensions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      this._e.emit('mount.before');\n\n      if (isObject(extensions)) {\n        this._c = mount(this, extensions, this._e);\n      } else {\n        warn('You need to provide a object on `mount()`');\n      }\n\n      this._e.emit('mount.after');\n\n      return this;\n    }\n\n    /**\n     * Collects an instance `translate` transformers.\n     *\n     * @param  {Array} transformers Collection of transformers.\n     * @return {Void}\n     */\n\n  }, {\n    key: 'mutate',\n    value: function mutate() {\n      var transformers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      if (isArray(transformers)) {\n        this._t = transformers;\n      } else {\n        warn('You need to provide a array on `mutate()`');\n      }\n\n      return this;\n    }\n\n    /**\n     * Updates glide with specified settings.\n     *\n     * @param {Object} settings\n     * @return {Glide}\n     */\n\n  }, {\n    key: 'update',\n    value: function update() {\n      var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      this.settings = mergeOptions(this.settings, settings);\n\n      if (settings.hasOwnProperty('startAt')) {\n        this.index = settings.startAt;\n      }\n\n      this._e.emit('update');\n\n      return this;\n    }\n\n    /**\n     * Change slide with specified pattern. A pattern must be in the special format:\n     * `>` - Move one forward\n     * `<` - Move one backward\n     * `={i}` - Go to {i} zero-based slide (eq. '=1', will go to second slide)\n     * `>>` - Rewinds to end (last slide)\n     * `<<` - Rewinds to start (first slide)\n     *\n     * @param {String} pattern\n     * @return {Glide}\n     */\n\n  }, {\n    key: 'go',\n    value: function go(pattern) {\n      this._c.Run.make(pattern);\n\n      return this;\n    }\n\n    /**\n     * Move track by specified distance.\n     *\n     * @param {String} distance\n     * @return {Glide}\n     */\n\n  }, {\n    key: 'move',\n    value: function move(distance) {\n      this._c.Transition.disable();\n      this._c.Move.make(distance);\n\n      return this;\n    }\n\n    /**\n     * Destroy instance and revert all changes done by this._c.\n     *\n     * @return {Glide}\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this._e.emit('destroy');\n\n      return this;\n    }\n\n    /**\n     * Start instance autoplaying.\n     *\n     * @param {Boolean|Number} interval Run autoplaying with passed interval regardless of `autoplay` settings\n     * @return {Glide}\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      var interval = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (interval) {\n        this.settings.autoplay = interval;\n      }\n\n      this._e.emit('play');\n\n      return this;\n    }\n\n    /**\n     * Stop instance autoplaying.\n     *\n     * @return {Glide}\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this._e.emit('pause');\n\n      return this;\n    }\n\n    /**\n     * Sets glide into a idle status.\n     *\n     * @return {Glide}\n     */\n\n  }, {\n    key: 'disable',\n    value: function disable() {\n      this.disabled = true;\n\n      return this;\n    }\n\n    /**\n     * Sets glide into a active status.\n     *\n     * @return {Glide}\n     */\n\n  }, {\n    key: 'enable',\n    value: function enable() {\n      this.disabled = false;\n\n      return this;\n    }\n\n    /**\n     * Adds cuutom event listener with handler.\n     *\n     * @param  {String|Array} event\n     * @param  {Function} handler\n     * @return {Glide}\n     */\n\n  }, {\n    key: 'on',\n    value: function on(event, handler) {\n      this._e.on(event, handler);\n\n      return this;\n    }\n\n    /**\n     * Checks if glide is a precised type.\n     *\n     * @param  {String} name\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isType',\n    value: function isType(name) {\n      return this.settings.type === name;\n    }\n\n    /**\n     * Gets value of the core options.\n     *\n     * @return {Object}\n     */\n\n  }, {\n    key: 'settings',\n    get: function get$$1() {\n      return this._o;\n    }\n\n    /**\n     * Sets value of the core options.\n     *\n     * @param  {Object} o\n     * @return {Void}\n     */\n    ,\n    set: function set$$1(o) {\n      if (isObject(o)) {\n        this._o = o;\n      } else {\n        warn('Options must be an `object` instance.');\n      }\n    }\n\n    /**\n     * Gets current index of the slider.\n     *\n     * @return {Object}\n     */\n\n  }, {\n    key: 'index',\n    get: function get$$1() {\n      return this._i;\n    }\n\n    /**\n     * Sets current index a slider.\n     *\n     * @return {Object}\n     */\n    ,\n    set: function set$$1(i) {\n      this._i = toInt(i);\n    }\n\n    /**\n     * Gets type name of the slider.\n     *\n     * @return {String}\n     */\n\n  }, {\n    key: 'type',\n    get: function get$$1() {\n      return this.settings.type;\n    }\n\n    /**\n     * Gets value of the idle status.\n     *\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'disabled',\n    get: function get$$1() {\n      return this._d;\n    }\n\n    /**\n     * Sets value of the idle status.\n     *\n     * @return {Boolean}\n     */\n    ,\n    set: function set$$1(status) {\n      this._d = !!status;\n    }\n  }]);\n  return Glide;\n}();\n\nfunction Run (Glide, Components, Events) {\n  var Run = {\n    /**\n     * Initializes autorunning of the glide.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this._o = false;\n    },\n\n\n    /**\n     * Makes glides running based on the passed moving schema.\n     *\n     * @param {String} move\n     */\n    make: function make(move) {\n      var _this = this;\n\n      if (!Glide.disabled) {\n        Glide.disable();\n\n        this.move = move;\n\n        Events.emit('run.before', this.move);\n\n        this.calculate();\n\n        Events.emit('run', this.move);\n\n        Components.Transition.after(function () {\n          if (_this.isOffset('<') || _this.isOffset('>')) {\n            _this._o = false;\n\n            Events.emit('run.offset', _this.move);\n          }\n\n          Events.emit('run.after', _this.move);\n\n          Glide.enable();\n        });\n      }\n    },\n\n\n    /**\n     * Calculates current index based on defined move.\n     *\n     * @return {Void}\n     */\n    calculate: function calculate() {\n      var move = this.move,\n          length = this.length;\n      var steps = move.steps,\n          direction = move.direction;\n\n\n      var countableSteps = isNumber(toInt(steps)) && toInt(steps) !== 0;\n\n      switch (direction) {\n        case '>':\n          if (steps === '>') {\n            Glide.index = length;\n          } else if (this.isEnd()) {\n            if (!(Glide.isType('slider') && !Glide.settings.rewind)) {\n              this._o = true;\n\n              Glide.index = 0;\n            }\n\n            Events.emit('run.end', move);\n          } else if (countableSteps) {\n            Glide.index += Math.min(length - Glide.index, -toInt(steps));\n          } else {\n            Glide.index++;\n          }\n          break;\n\n        case '<':\n          if (steps === '<') {\n            Glide.index = 0;\n          } else if (this.isStart()) {\n            if (!(Glide.isType('slider') && !Glide.settings.rewind)) {\n              this._o = true;\n\n              Glide.index = length;\n            }\n\n            Events.emit('run.start', move);\n          } else if (countableSteps) {\n            Glide.index -= Math.min(Glide.index, toInt(steps));\n          } else {\n            Glide.index--;\n          }\n          break;\n\n        case '=':\n          Glide.index = steps;\n          break;\n      }\n    },\n\n\n    /**\n     * Checks if we are on the first slide.\n     *\n     * @return {Boolean}\n     */\n    isStart: function isStart() {\n      return Glide.index === 0;\n    },\n\n\n    /**\n     * Checks if we are on the last slide.\n     *\n     * @return {Boolean}\n     */\n    isEnd: function isEnd() {\n      return Glide.index === this.length;\n    },\n\n\n    /**\n     * Checks if we are making a offset run.\n     *\n     * @param {String} direction\n     * @return {Boolean}\n     */\n    isOffset: function isOffset(direction) {\n      return this._o && this.move.direction === direction;\n    }\n  };\n\n  define(Run, 'move', {\n    /**\n     * Gets value of the move schema.\n     *\n     * @returns {Object}\n     */\n    get: function get() {\n      return this._m;\n    },\n\n\n    /**\n     * Sets value of the move schema.\n     *\n     * @returns {Object}\n     */\n    set: function set(value) {\n      this._m = {\n        direction: value.substr(0, 1),\n        steps: value.substr(1) ? value.substr(1) : 0\n      };\n    }\n  });\n\n  define(Run, 'length', {\n    /**\n     * Gets value of the running distance based\n     * on zero-indexing number of slides.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var settings = Glide.settings;\n      var length = Components.Html.slides.length;\n\n      // If the `bound` option is acitve, a maximum running distance should be\n      // reduced by `perView` and `focusAt` settings. Running distance\n      // should end before creating an empty space after instance.\n\n      if (Glide.isType('slider') && settings.focusAt !== 'center' && settings.bound) {\n        return length - 1 - (toInt(settings.perView) - 1) + toInt(settings.focusAt);\n      }\n\n      return length - 1;\n    }\n  });\n\n  define(Run, 'offset', {\n    /**\n     * Gets status of the offsetting flag.\n     *\n     * @return {Boolean}\n     */\n    get: function get() {\n      return this._o;\n    }\n  });\n\n  return Run;\n}\n\n/**\n * Returns a current time.\n *\n * @return {Number}\n */\nfunction now() {\n  return new Date().getTime();\n}\n\n/**\n * Returns a function, that, when invoked, will only be triggered\n * at most once during a given window of time.\n *\n * @param {Function} func\n * @param {Number} wait\n * @param {Object=} options\n * @return {Function}\n *\n * @see https://github.com/jashkenas/underscore\n */\nfunction throttle(func, wait, options) {\n  var timeout = void 0,\n      context = void 0,\n      args = void 0,\n      result = void 0;\n  var previous = 0;\n  if (!options) options = {};\n\n  var later = function later() {\n    previous = options.leading === false ? 0 : now();\n    timeout = null;\n    result = func.apply(context, args);\n    if (!timeout) context = args = null;\n  };\n\n  var throttled = function throttled() {\n    var at = now();\n    if (!previous && options.leading === false) previous = at;\n    var remaining = wait - (at - previous);\n    context = this;\n    args = arguments;\n    if (remaining <= 0 || remaining > wait) {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = null;\n      }\n      previous = at;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining);\n    }\n    return result;\n  };\n\n  throttled.cancel = function () {\n    clearTimeout(timeout);\n    previous = 0;\n    timeout = context = args = null;\n  };\n\n  return throttled;\n}\n\nvar MARGIN_TYPE = {\n  ltr: ['marginLeft', 'marginRight'],\n  rtl: ['marginRight', 'marginLeft']\n};\n\nfunction Gaps (Glide, Components, Events) {\n  var Gaps = {\n    /**\n     * Applies gaps between slides. First and last\n     * slides do not receive it's edge margins.\n     *\n     * @param {HTMLCollection} slides\n     * @return {Void}\n     */\n    apply: function apply(slides) {\n      for (var i = 0, len = slides.length; i < len; i++) {\n        var style = slides[i].style;\n        var direction = Components.Direction.value;\n\n        if (i !== 0) {\n          style[MARGIN_TYPE[direction][0]] = this.value / 2 + 'px';\n        } else {\n          style[MARGIN_TYPE[direction][0]] = '';\n        }\n\n        if (i !== slides.length - 1) {\n          style[MARGIN_TYPE[direction][1]] = this.value / 2 + 'px';\n        } else {\n          style[MARGIN_TYPE[direction][1]] = '';\n        }\n      }\n    },\n\n\n    /**\n     * Removes gaps from the slides.\n     *\n     * @param {HTMLCollection} slides\n     * @returns {Void}\n    */\n    remove: function remove(slides) {\n      for (var i = 0, len = slides.length; i < len; i++) {\n        var style = slides[i].style;\n\n        style.marginLeft = '';\n        style.marginRight = '';\n      }\n    }\n  };\n\n  define(Gaps, 'value', {\n    /**\n     * Gets value of the gap.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return toInt(Glide.settings.gap);\n    }\n  });\n\n  define(Gaps, 'grow', {\n    /**\n     * Gets additional dimentions value caused by gaps.\n     * Used to increase width of the slides wrapper.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return Gaps.value * (Components.Sizes.length - 1);\n    }\n  });\n\n  define(Gaps, 'reductor', {\n    /**\n     * Gets reduction value caused by gaps.\n     * Used to subtract width of the slides.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      var perView = Glide.settings.perView;\n\n      return Gaps.value * (perView - 1) / perView;\n    }\n  });\n\n  /**\n   * Apply calculated gaps:\n   * - after building, so slides (including clones) will receive proper margins\n   * - on updating via API, to recalculate gaps with new options\n   */\n  Events.on(['build.after', 'update'], throttle(function () {\n    Gaps.apply(Components.Html.wrapper.children);\n  }, 30));\n\n  /**\n   * Remove gaps:\n   * - on destroying to bring markup to its inital state\n   */\n  Events.on('destroy', function () {\n    Gaps.remove(Components.Html.wrapper.children);\n  });\n\n  return Gaps;\n}\n\n/**\n * Finds siblings nodes of the passed node.\n *\n * @param  {Element} node\n * @return {Array}\n */\nfunction siblings(node) {\n  if (node && node.parentNode) {\n    var n = node.parentNode.firstChild;\n    var matched = [];\n\n    for (; n; n = n.nextSibling) {\n      if (n.nodeType === 1 && n !== node) {\n        matched.push(n);\n      }\n    }\n\n    return matched;\n  }\n\n  return [];\n}\n\n/**\n * Checks if passed node exist and is a valid element.\n *\n * @param  {Element} node\n * @return {Boolean}\n */\nfunction exist(node) {\n  if (node && node instanceof window.HTMLElement) {\n    return true;\n  }\n\n  return false;\n}\n\nvar TRACK_SELECTOR = '[data-glide-el=\"track\"]';\n\nfunction Html (Glide, Components) {\n  var Html = {\n    /**\n     * Setup slider HTML nodes.\n     *\n     * @param {Glide} glide\n     */\n    mount: function mount() {\n      this.root = Glide.selector;\n      this.track = this.root.querySelector(TRACK_SELECTOR);\n      this.slides = Array.prototype.slice.call(this.wrapper.children).filter(function (slide) {\n        return !slide.classList.contains(Glide.settings.classes.cloneSlide);\n      });\n    }\n  };\n\n  define(Html, 'root', {\n    /**\n     * Gets node of the glide main element.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Html._r;\n    },\n\n\n    /**\n     * Sets node of the glide main element.\n     *\n     * @return {Object}\n     */\n    set: function set(r) {\n      if (isString(r)) {\n        r = document.querySelector(r);\n      }\n\n      if (exist(r)) {\n        Html._r = r;\n      } else {\n        warn('Root element must be a existing Html node');\n      }\n    }\n  });\n\n  define(Html, 'track', {\n    /**\n     * Gets node of the glide track with slides.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Html._t;\n    },\n\n\n    /**\n     * Sets node of the glide track with slides.\n     *\n     * @return {Object}\n     */\n    set: function set(t) {\n      if (exist(t)) {\n        Html._t = t;\n      } else {\n        warn('Could not find track element. Please use ' + TRACK_SELECTOR + ' attribute.');\n      }\n    }\n  });\n\n  define(Html, 'wrapper', {\n    /**\n     * Gets node of the slides wrapper.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Html.track.children[0];\n    }\n  });\n\n  return Html;\n}\n\nfunction Peek (Glide, Components, Events) {\n  var Peek = {\n    /**\n     * Setups how much to peek based on settings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.value = Glide.settings.peek;\n    }\n  };\n\n  define(Peek, 'value', {\n    /**\n     * Gets value of the peek.\n     *\n     * @returns {Number|Object}\n     */\n    get: function get() {\n      return Peek._v;\n    },\n\n\n    /**\n     * Sets value of the peek.\n     *\n     * @param {Number|Object} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      if (isObject(value)) {\n        value.before = toInt(value.before);\n        value.after = toInt(value.after);\n      } else {\n        value = toInt(value);\n      }\n\n      Peek._v = value;\n    }\n  });\n\n  define(Peek, 'reductor', {\n    /**\n     * Gets reduction value caused by peek.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      var value = Peek.value;\n      var perView = Glide.settings.perView;\n\n      if (isObject(value)) {\n        return value.before / perView + value.after / perView;\n      }\n\n      return value * 2 / perView;\n    }\n  });\n\n  /**\n   * Recalculate peeking sizes on:\n   * - when resizing window to update to proper percents\n   */\n  Events.on(['resize', 'update'], function () {\n    Peek.mount();\n  });\n\n  return Peek;\n}\n\nfunction Move (Glide, Components, Events) {\n  var Move = {\n    /**\n     * Constructs move component.\n     *\n     * @returns {Void}\n     */\n    mount: function mount() {\n      this._o = 0;\n    },\n\n\n    /**\n     * Calculates a movement value based on passed offset and currently active index.\n     *\n     * @param  {Number} offset\n     * @return {Void}\n     */\n    make: function make() {\n      var _this = this;\n\n      var offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      this.offset = offset;\n\n      Events.emit('move', {\n        movement: this.value\n      });\n\n      Components.Transition.after(function () {\n        Events.emit('move.after', {\n          movement: _this.value\n        });\n      });\n    }\n  };\n\n  define(Move, 'offset', {\n    /**\n     * Gets an offset value used to modify current translate.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Move._o;\n    },\n\n\n    /**\n     * Sets an offset value used to modify current translate.\n     *\n     * @return {Object}\n     */\n    set: function set(value) {\n      Move._o = !isUndefined(value) ? toInt(value) : 0;\n    }\n  });\n\n  define(Move, 'translate', {\n    /**\n     * Gets a raw movement value.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Sizes.slideWidth * Glide.index;\n    }\n  });\n\n  define(Move, 'value', {\n    /**\n     * Gets an actual movement value corrected by offset.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var offset = this.offset;\n      var translate = this.translate;\n\n      if (Components.Direction.is('rtl')) {\n        return translate + offset;\n      }\n\n      return translate - offset;\n    }\n  });\n\n  /**\n   * Make movement to proper slide on:\n   * - before build, so glide will start at `startAt` index\n   * - on each standard run to move to newly calculated index\n   */\n  Events.on(['build.before', 'run'], function () {\n    Move.make();\n  });\n\n  return Move;\n}\n\nfunction Sizes (Glide, Components, Events) {\n  var Sizes = {\n    /**\n     * Setups dimentions of slides.\n     *\n     * @return {Void}\n     */\n    setupSlides: function setupSlides() {\n      var slides = Components.Html.slides;\n\n      for (var i = 0; i < slides.length; i++) {\n        slides[i].style.width = this.slideWidth + 'px';\n      }\n    },\n\n\n    /**\n     * Setups dimentions of slides wrapper.\n     *\n     * @return {Void}\n     */\n    setupWrapper: function setupWrapper(dimention) {\n      Components.Html.wrapper.style.width = this.wrapperSize + 'px';\n    },\n\n\n    /**\n     * Removes applied styles from HTML elements.\n     *\n     * @returns {Void}\n     */\n    remove: function remove() {\n      var slides = Components.Html.slides;\n\n      for (var i = 0; i < slides.length; i++) {\n        slides[i].style.width = '';\n      }\n\n      Components.Html.wrapper.style.width = '';\n    }\n  };\n\n  define(Sizes, 'length', {\n    /**\n     * Gets count number of the slides.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Html.slides.length;\n    }\n  });\n\n  define(Sizes, 'width', {\n    /**\n     * Gets width value of the glide.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Html.root.offsetWidth;\n    }\n  });\n\n  define(Sizes, 'wrapperSize', {\n    /**\n     * Gets size of the slides wrapper.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Sizes.slideWidth * Sizes.length + Components.Gaps.grow + Components.Clones.grow;\n    }\n  });\n\n  define(Sizes, 'slideWidth', {\n    /**\n     * Gets width value of the single slide.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Sizes.width / Glide.settings.perView - Components.Peek.reductor - Components.Gaps.reductor;\n    }\n  });\n\n  /**\n   * Apply calculated glide's dimensions:\n   * - before building, so other dimentions (e.g. translate) will be calculated propertly\n   * - when resizing window to recalculate sildes dimensions\n   * - on updating via API, to calculate dimensions based on new options\n   */\n  Events.on(['build.before', 'resize', 'update'], function () {\n    Sizes.setupSlides();\n    Sizes.setupWrapper();\n  });\n\n  /**\n   * Remove calculated glide's dimensions:\n   * - on destoting to bring markup to its inital state\n   */\n  Events.on('destroy', function () {\n    Sizes.remove();\n  });\n\n  return Sizes;\n}\n\nfunction Build (Glide, Components, Events) {\n  var Build = {\n    /**\n     * Init glide building. Adds classes, sets\n     * dimensions and setups initial state.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      Events.emit('build.before');\n\n      this.typeClass();\n      this.activeClass();\n\n      Events.emit('build.after');\n    },\n\n\n    /**\n     * Adds `type` class to the glide element.\n     *\n     * @return {Void}\n     */\n    typeClass: function typeClass() {\n      Components.Html.root.classList.add(Glide.settings.classes[Glide.settings.type]);\n    },\n\n\n    /**\n     * Sets active class to current slide.\n     *\n     * @return {Void}\n     */\n    activeClass: function activeClass() {\n      var classes = Glide.settings.classes;\n      var slide = Components.Html.slides[Glide.index];\n\n      if (slide) {\n        slide.classList.add(classes.activeSlide);\n\n        siblings(slide).forEach(function (sibling) {\n          sibling.classList.remove(classes.activeSlide);\n        });\n      }\n    },\n\n\n    /**\n     * Removes HTML classes applied at building.\n     *\n     * @return {Void}\n     */\n    removeClasses: function removeClasses() {\n      var classes = Glide.settings.classes;\n\n      Components.Html.root.classList.remove(classes[Glide.settings.type]);\n\n      Components.Html.slides.forEach(function (sibling) {\n        sibling.classList.remove(classes.activeSlide);\n      });\n    }\n  };\n\n  /**\n   * Clear building classes:\n   * - on destroying to bring HTML to its initial state\n   * - on updating to remove classes before remounting component\n   */\n  Events.on(['destroy', 'update'], function () {\n    Build.removeClasses();\n  });\n\n  /**\n   * Remount component:\n   * - on resizing of the window to calculate new dimentions\n   * - on updating settings via API\n   */\n  Events.on(['resize', 'update'], function () {\n    Build.mount();\n  });\n\n  /**\n   * Swap active class of current slide:\n   * - after each move to the new index\n   */\n  Events.on('move.after', function () {\n    Build.activeClass();\n  });\n\n  return Build;\n}\n\nfunction Clones (Glide, Components, Events) {\n  var Clones = {\n    /**\n     * Create pattern map and collect slides to be cloned.\n     */\n    mount: function mount() {\n      this.items = [];\n\n      if (Glide.isType('carousel')) {\n        this.items = this.collect();\n      }\n    },\n\n\n    /**\n     * Collect clones with pattern.\n     *\n     * @return {Void}\n     */\n    collect: function collect() {\n      var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var slides = Components.Html.slides;\n      var _Glide$settings = Glide.settings,\n          perView = _Glide$settings.perView,\n          classes = _Glide$settings.classes;\n\n\n      var peekIncrementer = +!!Glide.settings.peek;\n      var part = perView + peekIncrementer;\n      var start = slides.slice(0, part);\n      var end = slides.slice(-part);\n\n      for (var r = 0; r < Math.max(1, Math.floor(perView / slides.length)); r++) {\n        for (var i = 0; i < start.length; i++) {\n          var clone = start[i].cloneNode(true);\n\n          clone.classList.add(classes.cloneSlide);\n\n          items.push(clone);\n        }\n\n        for (var _i = 0; _i < end.length; _i++) {\n          var _clone = end[_i].cloneNode(true);\n\n          _clone.classList.add(classes.cloneSlide);\n\n          items.unshift(_clone);\n        }\n      }\n\n      return items;\n    },\n\n\n    /**\n     * Append cloned slides with generated pattern.\n     *\n     * @return {Void}\n     */\n    append: function append() {\n      var items = this.items;\n      var _Components$Html = Components.Html,\n          wrapper = _Components$Html.wrapper,\n          slides = _Components$Html.slides;\n\n\n      var half = Math.floor(items.length / 2);\n      var prepend = items.slice(0, half).reverse();\n      var append = items.slice(half, items.length);\n\n      for (var i = 0; i < append.length; i++) {\n        wrapper.appendChild(append[i]);\n      }\n\n      for (var _i2 = 0; _i2 < prepend.length; _i2++) {\n        wrapper.insertBefore(prepend[_i2], slides[0]);\n      }\n\n      for (var _i3 = 0; _i3 < items.length; _i3++) {\n        items[_i3].style.width = Components.Sizes.slideWidth + 'px';\n      }\n    },\n\n\n    /**\n     * Remove all cloned slides.\n     *\n     * @return {Void}\n     */\n    remove: function remove() {\n      var items = this.items;\n\n\n      for (var i = 0; i < items.length; i++) {\n        Components.Html.wrapper.removeChild(items[i]);\n      }\n    }\n  };\n\n  define(Clones, 'grow', {\n    /**\n     * Gets additional dimentions value caused by clones.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return (Components.Sizes.slideWidth + Components.Gaps.value) * Clones.items.length;\n    }\n  });\n\n  /**\n   * Append additional slide's clones:\n   * - while glide's type is `carousel`\n   */\n  Events.on('update', function () {\n    Clones.remove();\n    Clones.mount();\n    Clones.append();\n  });\n\n  /**\n   * Append additional slide's clones:\n   * - while glide's type is `carousel`\n   */\n  Events.on('build.before', function () {\n    if (Glide.isType('carousel')) {\n      Clones.append();\n    }\n  });\n\n  /**\n   * Remove clones HTMLElements:\n   * - on destroying, to bring HTML to its initial state\n   */\n  Events.on('destroy', function () {\n    Clones.remove();\n  });\n\n  return Clones;\n}\n\nvar EventsBinder = function () {\n  /**\n   * Construct a EventsBinder instance.\n   */\n  function EventsBinder() {\n    var listeners = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, EventsBinder);\n\n    this.listeners = listeners;\n  }\n\n  /**\n   * Adds events listeners to arrows HTML elements.\n   *\n   * @param  {String|Array} events\n   * @param  {Element|Window|Document} el\n   * @param  {Function} closure\n   * @param  {Boolean|Object} capture\n   * @return {Void}\n   */\n\n\n  createClass(EventsBinder, [{\n    key: 'on',\n    value: function on(events, el, closure) {\n      var capture = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      if (isString(events)) {\n        events = [events];\n      }\n\n      for (var i = 0; i < events.length; i++) {\n        this.listeners[events[i]] = closure;\n\n        el.addEventListener(events[i], this.listeners[events[i]], capture);\n      }\n    }\n\n    /**\n     * Removes event listeners from arrows HTML elements.\n     *\n     * @param  {String|Array} events\n     * @param  {Element|Window|Document} el\n     * @return {Void}\n     */\n\n  }, {\n    key: 'off',\n    value: function off(events, el) {\n      if (isString(events)) {\n        events = [events];\n      }\n\n      for (var i = 0; i < events.length; i++) {\n        el.removeEventListener(events[i], this.listeners[events[i]], false);\n      }\n    }\n\n    /**\n     * Destroy collected listeners.\n     *\n     * @returns {Void}\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      delete this.listeners;\n    }\n  }]);\n  return EventsBinder;\n}();\n\nfunction Resize (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  var Resize = {\n    /**\n     * Initializes window bindings.\n     */\n    mount: function mount() {\n      this.bind();\n    },\n\n\n    /**\n     * Binds `rezsize` listener to the window.\n     * It's a costly event, so we are debouncing it.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('resize', window, throttle(function () {\n        Events.emit('resize');\n      }, Glide.settings.throttle));\n    },\n\n\n    /**\n     * Unbinds listeners from the window.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('resize', window);\n    }\n  };\n\n  /**\n   * Remove bindings from window:\n   * - on destroying, to remove added EventListener\n   */\n  Events.on('destroy', function () {\n    Resize.unbind();\n    Binder.destroy();\n  });\n\n  return Resize;\n}\n\nvar VALID_DIRECTIONS = ['ltr', 'rtl'];\nvar FLIPED_MOVEMENTS = {\n  '>': '<',\n  '<': '>',\n  '=': '='\n};\n\nfunction Direction (Glide, Components, Events) {\n  var Direction = {\n    /**\n     * Setups gap value based on settings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.value = Glide.settings.direction;\n    },\n\n\n    /**\n     * Resolves pattern based on direction value\n     *\n     * @param {String} pattern\n     * @returns {String}\n     */\n    resolve: function resolve(pattern) {\n      var token = pattern.slice(0, 1);\n\n      if (this.is('rtl')) {\n        return pattern.split(token).join(FLIPED_MOVEMENTS[token]);\n      }\n\n      return pattern;\n    },\n\n\n    /**\n     * Checks value of direction mode.\n     *\n     * @param {String} direction\n     * @returns {Boolean}\n     */\n    is: function is(direction) {\n      return this.value === direction;\n    },\n\n\n    /**\n     * Applies direction class to the root HTML element.\n     *\n     * @return {Void}\n     */\n    addClass: function addClass() {\n      Components.Html.root.classList.add(Glide.settings.classes.direction[this.value]);\n    },\n\n\n    /**\n     * Removes direction class from the root HTML element.\n     *\n     * @return {Void}\n     */\n    removeClass: function removeClass() {\n      Components.Html.root.classList.remove(Glide.settings.classes.direction[this.value]);\n    }\n  };\n\n  define(Direction, 'value', {\n    /**\n     * Gets value of the direction.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return Direction._v;\n    },\n\n\n    /**\n     * Sets value of the direction.\n     *\n     * @param {String} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      if (VALID_DIRECTIONS.indexOf(value) > -1) {\n        Direction._v = value;\n      } else {\n        warn('Direction value must be `ltr` or `rtl`');\n      }\n    }\n  });\n\n  /**\n   * Clear direction class:\n   * - on destroy to bring HTML to its initial state\n   * - on update to remove class before reappling bellow\n   */\n  Events.on(['destroy', 'update'], function () {\n    Direction.removeClass();\n  });\n\n  /**\n   * Remount component:\n   * - on update to reflect changes in direction value\n   */\n  Events.on('update', function () {\n    Direction.mount();\n  });\n\n  /**\n   * Apply direction class:\n   * - before building to apply class for the first time\n   * - on updating to reapply direction class that may changed\n   */\n  Events.on(['build.before', 'update'], function () {\n    Direction.addClass();\n  });\n\n  return Direction;\n}\n\n/**\n * Reflects value of glide movement.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Rtl (Glide, Components) {\n  return {\n    /**\n     * Negates the passed translate if glide is in RTL option.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      if (Components.Direction.is('rtl')) {\n        return -translate;\n      }\n\n      return translate;\n    }\n  };\n}\n\n/**\n * Updates glide movement with a `gap` settings.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Gap (Glide, Components) {\n  return {\n    /**\n     * Modifies passed translate value with number in the `gap` settings.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      return translate + Components.Gaps.value * Glide.index;\n    }\n  };\n}\n\n/**\n * Updates glide movement with width of additional clones width.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Grow (Glide, Components) {\n  return {\n    /**\n     * Adds to the passed translate width of the half of clones.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      return translate + Components.Clones.grow / 2;\n    }\n  };\n}\n\n/**\n * Updates glide movement with a `peek` settings.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Peeking (Glide, Components) {\n  return {\n    /**\n     * Modifies passed translate value with a `peek` setting.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      if (Glide.settings.focusAt >= 0) {\n        var peek = Components.Peek.value;\n\n        if (isObject(peek)) {\n          return translate - peek.before;\n        }\n\n        return translate - peek;\n      }\n\n      return translate;\n    }\n  };\n}\n\n/**\n * Updates glide movement with a `focusAt` settings.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Focusing (Glide, Components) {\n  return {\n    /**\n     * Modifies passed translate value with index in the `focusAt` setting.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      var gap = Components.Gaps.value;\n      var width = Components.Sizes.width;\n      var focusAt = Glide.settings.focusAt;\n      var slideWidth = Components.Sizes.slideWidth;\n\n      if (focusAt === 'center') {\n        return translate - (width / 2 - slideWidth / 2);\n      }\n\n      return translate - slideWidth * focusAt - gap * focusAt;\n    }\n  };\n}\n\n/**\n * Applies diffrent transformers on translate value.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction mutator (Glide, Components, Events) {\n  /**\n   * Merge instance transformers with collection of default transformers.\n   * It's important that the Rtl component be last on the list,\n   * so it reflects all previous transformations.\n   *\n   * @type {Array}\n   */\n  var TRANSFORMERS = [Gap, Grow, Peeking, Focusing].concat(Glide._t, [Rtl]);\n\n  return {\n    /**\n     * Piplines translate value with registered transformers.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    mutate: function mutate(translate) {\n      for (var i = 0; i < TRANSFORMERS.length; i++) {\n        var transformer = TRANSFORMERS[i];\n\n        if (isFunction(transformer) && isFunction(transformer().modify)) {\n          translate = transformer(Glide, Components, Events).modify(translate);\n        } else {\n          warn('Transformer should be a function that returns an object with `modify()` method');\n        }\n      }\n\n      return translate;\n    }\n  };\n}\n\nfunction Translate (Glide, Components, Events) {\n  var Translate = {\n    /**\n     * Sets value of translate on HTML element.\n     *\n     * @param {Number} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      var transform = mutator(Glide, Components).mutate(value);\n\n      Components.Html.wrapper.style.transform = 'translate3d(' + -1 * transform + 'px, 0px, 0px)';\n    },\n\n\n    /**\n     * Removes value of translate from HTML element.\n     *\n     * @return {Void}\n     */\n    remove: function remove() {\n      Components.Html.wrapper.style.transform = '';\n    }\n  };\n\n  /**\n   * Set new translate value:\n   * - on move to reflect index change\n   * - on updating via API to reflect possible changes in options\n   */\n  Events.on('move', function (context) {\n    var gap = Components.Gaps.value;\n    var length = Components.Sizes.length;\n    var width = Components.Sizes.slideWidth;\n\n    if (Glide.isType('carousel') && Components.Run.isOffset('<')) {\n      Components.Transition.after(function () {\n        Events.emit('translate.jump', width * (length - 1));\n\n        Translate.set(width * (length - 1));\n      });\n\n      return Translate.set(-width - gap * length);\n    }\n\n    if (Glide.isType('carousel') && Components.Run.isOffset('>')) {\n      Components.Transition.after(function () {\n        Events.emit('translate.jump');\n\n        Translate.set(0);\n      });\n\n      return Translate.set(width * length + gap * length);\n    }\n\n    return Translate.set(context.movement);\n  });\n\n  /**\n   * Remove translate:\n   * - on destroying to bring markup to its inital state\n   */\n  Events.on('destroy', function () {\n    Translate.remove();\n  });\n\n  return Translate;\n}\n\nfunction Transition (Glide, Components, Events) {\n  /**\n   * Holds inactivity status of transition.\n   * When true transition is not applied.\n   *\n   * @type {Boolean}\n   */\n  var disabled = false;\n\n  var Transition = {\n    /**\n     * Composes string of the CSS transition.\n     *\n     * @param {String} property\n     * @return {String}\n     */\n    compose: function compose(property) {\n      var settings = Glide.settings;\n\n      if (!disabled) {\n        return property + ' ' + this.duration + 'ms ' + settings.animationTimingFunc;\n      }\n\n      return property + ' 0ms ' + settings.animationTimingFunc;\n    },\n\n\n    /**\n     * Sets value of transition on HTML element.\n     *\n     * @param {String=} property\n     * @return {Void}\n     */\n    set: function set() {\n      var property = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'transform';\n\n      Components.Html.wrapper.style.transition = this.compose(property);\n    },\n\n\n    /**\n     * Removes value of transition from HTML element.\n     *\n     * @return {Void}\n     */\n    remove: function remove() {\n      Components.Html.wrapper.style.transition = '';\n    },\n\n\n    /**\n     * Runs callback after animation.\n     *\n     * @param  {Function} callback\n     * @return {Void}\n     */\n    after: function after(callback) {\n      setTimeout(function () {\n        callback();\n      }, this.duration);\n    },\n\n\n    /**\n     * Enable transition.\n     *\n     * @return {Void}\n     */\n    enable: function enable() {\n      disabled = false;\n\n      this.set();\n    },\n\n\n    /**\n     * Disable transition.\n     *\n     * @return {Void}\n     */\n    disable: function disable() {\n      disabled = true;\n\n      this.set();\n    }\n  };\n\n  define(Transition, 'duration', {\n    /**\n     * Gets duration of the transition based\n     * on currently running animation type.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var settings = Glide.settings;\n\n      if (Glide.isType('slider') && Components.Run.offset) {\n        return settings.rewindDuration;\n      }\n\n      return settings.animationDuration;\n    }\n  });\n\n  /**\n   * Set transition `style` value:\n   * - on each moving, because it may be cleared by offset move\n   */\n  Events.on('move', function () {\n    Transition.set();\n  });\n\n  /**\n   * Disable transition:\n   * - before initial build to avoid transitioning from `0` to `startAt` index\n   * - while resizing window and recalculating dimentions\n   * - on jumping from offset transition at start and end edges in `carousel` type\n   */\n  Events.on(['build.before', 'resize', 'translate.jump'], function () {\n    Transition.disable();\n  });\n\n  /**\n   * Enable transition:\n   * - on each running, because it may be disabled by offset move\n   */\n  Events.on('run', function () {\n    Transition.enable();\n  });\n\n  /**\n   * Remove transition:\n   * - on destroying to bring markup to its inital state\n   */\n  Events.on('destroy', function () {\n    Transition.remove();\n  });\n\n  return Transition;\n}\n\n/**\n * Test via a getter in the options object to see\n * if the passive property is accessed.\n *\n * @see https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n */\n\nvar supportsPassive = false;\n\ntry {\n  var opts = Object.defineProperty({}, 'passive', {\n    get: function get() {\n      supportsPassive = true;\n    }\n  });\n\n  window.addEventListener('testPassive', null, opts);\n  window.removeEventListener('testPassive', null, opts);\n} catch (e) {}\n\nvar supportsPassive$1 = supportsPassive;\n\nvar START_EVENTS = ['touchstart', 'mousedown'];\nvar MOVE_EVENTS = ['touchmove', 'mousemove'];\nvar END_EVENTS = ['touchend', 'touchcancel', 'mouseup', 'mouseleave'];\nvar MOUSE_EVENTS = ['mousedown', 'mousemove', 'mouseup', 'mouseleave'];\n\nfunction Swipe (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  var swipeSin = 0;\n  var swipeStartX = 0;\n  var swipeStartY = 0;\n  var disabled = false;\n  var moveable = true;\n  var capture = supportsPassive$1 ? { passive: true } : false;\n\n  var Swipe = {\n    /**\n     * Initializes swipe bindings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.bindSwipeStart();\n    },\n\n\n    /**\n     * Handler for `swipestart` event. Calculates entry points of the user's tap.\n     *\n     * @param {Object} event\n     * @return {Void}\n     */\n    start: function start(event) {\n      if (!disabled && !Glide.disabled) {\n        this.disable();\n\n        var swipe = this.touches(event);\n\n        moveable = true;\n        swipeSin = null;\n        swipeStartX = toInt(swipe.pageX);\n        swipeStartY = toInt(swipe.pageY);\n\n        this.bindSwipeMove();\n        this.bindSwipeEnd();\n\n        Events.emit('swipe.start');\n      }\n    },\n\n\n    /**\n     * Handler for `swipemove` event. Calculates user's tap angle and distance.\n     *\n     * @param {Object} event\n     */\n    move: function move(event) {\n      if (!Glide.disabled) {\n        var _Glide$settings = Glide.settings,\n            touchAngle = _Glide$settings.touchAngle,\n            touchRatio = _Glide$settings.touchRatio,\n            classes = _Glide$settings.classes;\n\n\n        var swipe = this.touches(event);\n\n        var subExSx = toInt(swipe.pageX) - swipeStartX;\n        var subEySy = toInt(swipe.pageY) - swipeStartY;\n        var powEX = Math.abs(subExSx << 2);\n        var powEY = Math.abs(subEySy << 2);\n        var swipeHypotenuse = Math.sqrt(powEX + powEY);\n        var swipeCathetus = Math.sqrt(powEY);\n\n        swipeSin = Math.asin(swipeCathetus / swipeHypotenuse);\n\n        if (moveable && swipeSin * 180 / Math.PI < touchAngle) {\n          event.stopPropagation();\n\n          Components.Move.make(subExSx * toFloat(touchRatio));\n\n          Components.Html.root.classList.add(classes.dragging);\n\n          Events.emit('swipe.move');\n        } else {\n          moveable = false;\n\n          return false;\n        }\n      }\n    },\n\n\n    /**\n     * Handler for `swipeend` event. Finitializes user's tap and decides about glide move.\n     *\n     * @param {Object} event\n     * @return {Void}\n     */\n    end: function end(event) {\n      if (!Glide.disabled) {\n        var settings = Glide.settings;\n\n        var swipe = this.touches(event);\n        var threshold = this.threshold(event);\n\n        var swipeDistance = swipe.pageX - swipeStartX;\n        var swipeDeg = swipeSin * 180 / Math.PI;\n        var steps = Math.round(swipeDistance / Components.Sizes.slideWidth);\n\n        this.enable();\n\n        if (moveable) {\n          if (swipeDistance > threshold && swipeDeg < settings.touchAngle) {\n            // While swipe is positive and greater than threshold move backward.\n            if (settings.perTouch) {\n              steps = Math.min(steps, toInt(settings.perTouch));\n            }\n\n            if (Components.Direction.is('rtl')) {\n              steps = -steps;\n            }\n\n            Components.Run.make(Components.Direction.resolve('<' + steps));\n          } else if (swipeDistance < -threshold && swipeDeg < settings.touchAngle) {\n            // While swipe is negative and lower than negative threshold move forward.\n            if (settings.perTouch) {\n              steps = Math.max(steps, -toInt(settings.perTouch));\n            }\n\n            if (Components.Direction.is('rtl')) {\n              steps = -steps;\n            }\n\n            Components.Run.make(Components.Direction.resolve('>' + steps));\n          } else {\n            // While swipe don't reach distance apply previous transform.\n            Components.Move.make();\n          }\n        }\n\n        Components.Html.root.classList.remove(settings.classes.dragging);\n\n        this.unbindSwipeMove();\n        this.unbindSwipeEnd();\n\n        Events.emit('swipe.end');\n      }\n    },\n\n\n    /**\n     * Binds swipe's starting event.\n     *\n     * @return {Void}\n     */\n    bindSwipeStart: function bindSwipeStart() {\n      var _this = this;\n\n      var settings = Glide.settings;\n\n      if (settings.swipeThreshold) {\n        Binder.on(START_EVENTS[0], Components.Html.wrapper, function (event) {\n          _this.start(event);\n        }, capture);\n      }\n\n      if (settings.dragThreshold) {\n        Binder.on(START_EVENTS[1], Components.Html.wrapper, function (event) {\n          _this.start(event);\n        }, capture);\n      }\n    },\n\n\n    /**\n     * Unbinds swipe's starting event.\n     *\n     * @return {Void}\n     */\n    unbindSwipeStart: function unbindSwipeStart() {\n      Binder.off(START_EVENTS[0], Components.Html.wrapper);\n      Binder.off(START_EVENTS[1], Components.Html.wrapper);\n    },\n\n\n    /**\n     * Binds swipe's moving event.\n     *\n     * @return {Void}\n     */\n    bindSwipeMove: function bindSwipeMove() {\n      var _this2 = this;\n\n      Binder.on(MOVE_EVENTS, Components.Html.wrapper, throttle(function (event) {\n        _this2.move(event);\n      }, Glide.settings.throttle), capture);\n    },\n\n\n    /**\n     * Unbinds swipe's moving event.\n     *\n     * @return {Void}\n     */\n    unbindSwipeMove: function unbindSwipeMove() {\n      Binder.off(MOVE_EVENTS, Components.Html.wrapper);\n    },\n\n\n    /**\n     * Binds swipe's ending event.\n     *\n     * @return {Void}\n     */\n    bindSwipeEnd: function bindSwipeEnd() {\n      var _this3 = this;\n\n      Binder.on(END_EVENTS, Components.Html.wrapper, function (event) {\n        _this3.end(event);\n      });\n    },\n\n\n    /**\n     * Unbinds swipe's ending event.\n     *\n     * @return {Void}\n     */\n    unbindSwipeEnd: function unbindSwipeEnd() {\n      Binder.off(END_EVENTS, Components.Html.wrapper);\n    },\n\n\n    /**\n     * Normalizes event touches points accorting to different types.\n     *\n     * @param {Object} event\n     */\n    touches: function touches(event) {\n      if (MOUSE_EVENTS.indexOf(event.type) > -1) {\n        return event;\n      }\n\n      return event.touches[0] || event.changedTouches[0];\n    },\n\n\n    /**\n     * Gets value of minimum swipe distance settings based on event type.\n     *\n     * @return {Number}\n     */\n    threshold: function threshold(event) {\n      var settings = Glide.settings;\n\n      if (MOUSE_EVENTS.indexOf(event.type) > -1) {\n        return settings.dragThreshold;\n      }\n\n      return settings.swipeThreshold;\n    },\n\n\n    /**\n     * Enables swipe event.\n     *\n     * @return {self}\n     */\n    enable: function enable() {\n      disabled = false;\n\n      Components.Transition.enable();\n\n      return this;\n    },\n\n\n    /**\n     * Disables swipe event.\n     *\n     * @return {self}\n     */\n    disable: function disable() {\n      disabled = true;\n\n      Components.Transition.disable();\n\n      return this;\n    }\n  };\n\n  /**\n   * Add component class:\n   * - after initial building\n   */\n  Events.on('build.after', function () {\n    Components.Html.root.classList.add(Glide.settings.classes.swipeable);\n  });\n\n  /**\n   * Remove swiping bindings:\n   * - on destroying, to remove added EventListeners\n   */\n  Events.on('destroy', function () {\n    Swipe.unbindSwipeStart();\n    Swipe.unbindSwipeMove();\n    Swipe.unbindSwipeEnd();\n    Binder.destroy();\n  });\n\n  return Swipe;\n}\n\nfunction Images (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  var Images = {\n    /**\n     * Binds listener to glide wrapper.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.bind();\n    },\n\n\n    /**\n     * Binds `dragstart` event on wrapper to prevent dragging images.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('dragstart', Components.Html.wrapper, this.dragstart);\n    },\n\n\n    /**\n     * Unbinds `dragstart` event on wrapper.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('dragstart', Components.Html.wrapper);\n    },\n\n\n    /**\n     * Event handler. Prevents dragging.\n     *\n     * @return {Void}\n     */\n    dragstart: function dragstart(event) {\n      event.preventDefault();\n    }\n  };\n\n  /**\n   * Remove bindings from images:\n   * - on destroying, to remove added EventListeners\n   */\n  Events.on('destroy', function () {\n    Images.unbind();\n    Binder.destroy();\n  });\n\n  return Images;\n}\n\nfunction Anchors (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  /**\n   * Holds detaching status of anchors.\n   * Prevents detaching of already detached anchors.\n   *\n   * @private\n   * @type {Boolean}\n   */\n  var detached = false;\n\n  /**\n   * Holds preventing status of anchors.\n   * If `true` redirection after click will be disabled.\n   *\n   * @private\n   * @type {Boolean}\n   */\n  var prevented = false;\n\n  var Anchors = {\n    /**\n     * Setups a initial state of anchors component.\n     *\n     * @returns {Void}\n     */\n    mount: function mount() {\n      /**\n       * Holds collection of anchors elements.\n       *\n       * @private\n       * @type {HTMLCollection}\n       */\n      this._a = Components.Html.wrapper.querySelectorAll('a');\n\n      this.bind();\n    },\n\n\n    /**\n     * Binds events to anchors inside a track.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('click', Components.Html.wrapper, this.click);\n    },\n\n\n    /**\n     * Unbinds events attached to anchors inside a track.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('click', Components.Html.wrapper);\n    },\n\n\n    /**\n     * Handler for click event. Prevents clicks when glide is in `prevent` status.\n     *\n     * @param  {Object} event\n     * @return {Void}\n     */\n    click: function click(event) {\n      event.stopPropagation();\n\n      if (prevented) {\n        event.preventDefault();\n      }\n    },\n\n\n    /**\n     * Detaches anchors click event inside glide.\n     *\n     * @return {self}\n     */\n    detach: function detach() {\n      prevented = true;\n\n      if (!detached) {\n        for (var i = 0; i < this.items.length; i++) {\n          this.items[i].draggable = false;\n\n          this.items[i].setAttribute('data-href', this.items[i].getAttribute('href'));\n\n          this.items[i].removeAttribute('href');\n        }\n\n        detached = true;\n      }\n\n      return this;\n    },\n\n\n    /**\n     * Attaches anchors click events inside glide.\n     *\n     * @return {self}\n     */\n    attach: function attach() {\n      prevented = false;\n\n      if (detached) {\n        for (var i = 0; i < this.items.length; i++) {\n          this.items[i].draggable = true;\n\n          this.items[i].setAttribute('href', this.items[i].getAttribute('data-href'));\n        }\n\n        detached = false;\n      }\n\n      return this;\n    }\n  };\n\n  define(Anchors, 'items', {\n    /**\n     * Gets collection of the arrows HTML elements.\n     *\n     * @return {HTMLElement[]}\n     */\n    get: function get() {\n      return Anchors._a;\n    }\n  });\n\n  /**\n   * Detach anchors inside slides:\n   * - on swiping, so they won't redirect to its `href` attributes\n   */\n  Events.on('swipe.move', function () {\n    Anchors.detach();\n  });\n\n  /**\n   * Attach anchors inside slides:\n   * - after swiping and transitions ends, so they can redirect after click again\n   */\n  Events.on('swipe.end', function () {\n    Components.Transition.after(function () {\n      Anchors.attach();\n    });\n  });\n\n  /**\n   * Unbind anchors inside slides:\n   * - on destroying, to bring anchors to its initial state\n   */\n  Events.on('destroy', function () {\n    Anchors.attach();\n    Anchors.unbind();\n    Binder.destroy();\n  });\n\n  return Anchors;\n}\n\nvar NAV_SELECTOR = '[data-glide-el=\"controls[nav]\"]';\nvar CONTROLS_SELECTOR = '[data-glide-el^=\"controls\"]';\n\nfunction Controls (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  var Controls = {\n    /**\n     * Inits arrows. Binds events listeners\n     * to the arrows HTML elements.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      /**\n       * Collection of navigation HTML elements.\n       *\n       * @private\n       * @type {HTMLCollection}\n       */\n      this._n = Components.Html.root.querySelectorAll(NAV_SELECTOR);\n\n      /**\n       * Collection of controls HTML elements.\n       *\n       * @private\n       * @type {HTMLCollection}\n       */\n      this._c = Components.Html.root.querySelectorAll(CONTROLS_SELECTOR);\n\n      this.addBindings();\n    },\n\n\n    /**\n     * Sets active class to current slide.\n     *\n     * @return {Void}\n     */\n    setActive: function setActive() {\n      for (var i = 0; i < this._n.length; i++) {\n        this.addClass(this._n[i].children);\n      }\n    },\n\n\n    /**\n     * Removes active class to current slide.\n     *\n     * @return {Void}\n     */\n    removeActive: function removeActive() {\n      for (var i = 0; i < this._n.length; i++) {\n        this.removeClass(this._n[i].children);\n      }\n    },\n\n\n    /**\n     * Toggles active class on items inside navigation.\n     *\n     * @param  {HTMLElement} controls\n     * @return {Void}\n     */\n    addClass: function addClass(controls) {\n      var settings = Glide.settings;\n      var item = controls[Glide.index];\n\n      item.classList.add(settings.classes.activeNav);\n\n      siblings(item).forEach(function (sibling) {\n        sibling.classList.remove(settings.classes.activeNav);\n      });\n    },\n\n\n    /**\n     * Removes active class from active control.\n     *\n     * @param  {HTMLElement} controls\n     * @return {Void}\n     */\n    removeClass: function removeClass(controls) {\n      controls[Glide.index].classList.remove(Glide.settings.classes.activeNav);\n    },\n\n\n    /**\n     * Adds handles to the each group of controls.\n     *\n     * @return {Void}\n     */\n    addBindings: function addBindings() {\n      for (var i = 0; i < this._c.length; i++) {\n        this.bind(this._c[i].children);\n      }\n    },\n\n\n    /**\n     * Removes handles from the each group of controls.\n     *\n     * @return {Void}\n     */\n    removeBindings: function removeBindings() {\n      for (var i = 0; i < this._c.length; i++) {\n        this.unbind(this._c[i].children);\n      }\n    },\n\n\n    /**\n     * Binds events to arrows HTML elements.\n     *\n     * @param {HTMLCollection} elements\n     * @return {Void}\n     */\n    bind: function bind(elements) {\n      for (var i = 0; i < elements.length; i++) {\n        Binder.on(['click', 'touchstart'], elements[i], this.click);\n      }\n    },\n\n\n    /**\n     * Unbinds events binded to the arrows HTML elements.\n     *\n     * @param {HTMLCollection} elements\n     * @return {Void}\n     */\n    unbind: function unbind(elements) {\n      for (var i = 0; i < elements.length; i++) {\n        Binder.off(['click', 'touchstart'], elements[i]);\n      }\n    },\n\n\n    /**\n     * Handles `click` event on the arrows HTML elements.\n     * Moves slider in driection precised in\n     * `data-glide-dir` attribute.\n     *\n     * @param {Object} event\n     * @return {Void}\n     */\n    click: function click(event) {\n      event.preventDefault();\n\n      Components.Run.make(Components.Direction.resolve(event.currentTarget.getAttribute('data-glide-dir')));\n    }\n  };\n\n  define(Controls, 'items', {\n    /**\n     * Gets collection of the controls HTML elements.\n     *\n     * @return {HTMLElement[]}\n     */\n    get: function get() {\n      return Controls._c;\n    }\n  });\n\n  /**\n   * Swap active class of current navigation item:\n   * - after mounting to set it to initial index\n   * - after each move to the new index\n   */\n  Events.on(['mount.after', 'move.after'], function () {\n    Controls.setActive();\n  });\n\n  /**\n   * Remove bindings and HTML Classes:\n   * - on destroying, to bring markup to its initial state\n   */\n  Events.on('destroy', function () {\n    Controls.removeBindings();\n    Controls.removeActive();\n    Binder.destroy();\n  });\n\n  return Controls;\n}\n\nfunction Keyboard (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  var Keyboard = {\n    /**\n     * Binds keyboard events on component mount.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      if (Glide.settings.keyboard) {\n        this.bind();\n      }\n    },\n\n\n    /**\n     * Adds keyboard press events.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('keyup', document, this.press);\n    },\n\n\n    /**\n     * Removes keyboard press events.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('keyup', document);\n    },\n\n\n    /**\n     * Handles keyboard's arrows press and moving glide foward and backward.\n     *\n     * @param  {Object} event\n     * @return {Void}\n     */\n    press: function press(event) {\n      if (event.keyCode === 39) {\n        Components.Run.make(Components.Direction.resolve('>'));\n      }\n\n      if (event.keyCode === 37) {\n        Components.Run.make(Components.Direction.resolve('<'));\n      }\n    }\n  };\n\n  /**\n   * Remove bindings from keyboard:\n   * - on destroying to remove added events\n   * - on updating to remove events before remounting\n   */\n  Events.on(['destroy', 'update'], function () {\n    Keyboard.unbind();\n  });\n\n  /**\n   * Remount component\n   * - on updating to reflect potential changes in settings\n   */\n  Events.on('update', function () {\n    Keyboard.mount();\n  });\n\n  /**\n   * Destroy binder:\n   * - on destroying to remove listeners\n   */\n  Events.on('destroy', function () {\n    Binder.destroy();\n  });\n\n  return Keyboard;\n}\n\nfunction Autoplay (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  var Autoplay = {\n    /**\n     * Initializes autoplaying and events.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.start();\n\n      if (Glide.settings.hoverpause) {\n        this.bind();\n      }\n    },\n\n\n    /**\n     * Starts autoplaying in configured interval.\n     *\n     * @param {Boolean|Number} force Run autoplaying with passed interval regardless of `autoplay` settings\n     * @return {Void}\n     */\n    start: function start() {\n      var _this = this;\n\n      if (Glide.settings.autoplay) {\n        if (isUndefined(this._i)) {\n          this._i = setInterval(function () {\n            _this.stop();\n\n            Components.Run.make('>');\n\n            _this.start();\n          }, this.time);\n        }\n      }\n    },\n\n\n    /**\n     * Stops autorunning of the glide.\n     *\n     * @return {Void}\n     */\n    stop: function stop() {\n      this._i = clearInterval(this._i);\n    },\n\n\n    /**\n     * Stops autoplaying while mouse is over glide's area.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      var _this2 = this;\n\n      Binder.on('mouseover', Components.Html.root, function () {\n        _this2.stop();\n      });\n\n      Binder.on('mouseout', Components.Html.root, function () {\n        _this2.start();\n      });\n    },\n\n\n    /**\n     * Unbind mouseover events.\n     *\n     * @returns {Void}\n     */\n    unbind: function unbind() {\n      Binder.off(['mouseover', 'mouseout'], Components.Html.root);\n    }\n  };\n\n  define(Autoplay, 'time', {\n    /**\n     * Gets time period value for the autoplay interval. Prioritizes\n     * times in `data-glide-autoplay` attrubutes over options.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var autoplay = Components.Html.slides[Glide.index].getAttribute('data-glide-autoplay');\n\n      if (autoplay) {\n        return toInt(autoplay);\n      }\n\n      return toInt(Glide.settings.autoplay);\n    }\n  });\n\n  /**\n   * Stop autoplaying and unbind events:\n   * - on destroying, to clear defined interval\n   * - on updating via API to reset interval that may changed\n   */\n  Events.on(['destroy', 'update'], function () {\n    Autoplay.unbind();\n  });\n\n  /**\n   * Stop autoplaying:\n   * - before each run, to restart autoplaying\n   * - on pausing via API\n   * - on destroying, to clear defined interval\n   * - while starting a swipe\n   * - on updating via API to reset interval that may changed\n   */\n  Events.on(['run.before', 'pause', 'destroy', 'swipe.start', 'update'], function () {\n    Autoplay.stop();\n  });\n\n  /**\n   * Start autoplaying:\n   * - after each run, to restart autoplaying\n   * - on playing via API\n   * - while ending a swipe\n   */\n  Events.on(['run.after', 'play', 'swipe.end'], function () {\n    Autoplay.start();\n  });\n\n  /**\n   * Remount autoplaying:\n   * - on updating via API to reset interval that may changed\n   */\n  Events.on('update', function () {\n    Autoplay.mount();\n  });\n\n  /**\n   * Destroy a binder:\n   * - on destroying glide instance to clearup listeners\n   */\n  Events.on('destroy', function () {\n    Binder.destroy();\n  });\n\n  return Autoplay;\n}\n\n/**\n * Sorts keys of breakpoint object so they will be ordered from lower to bigger.\n *\n * @param {Object} points\n * @returns {Object}\n */\nfunction sortBreakpoints(points) {\n  if (isObject(points)) {\n    return sortKeys(points);\n  } else {\n    warn('Breakpoints option must be an object');\n  }\n\n  return {};\n}\n\nfunction Breakpoints (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  /**\n   * Holds reference to settings.\n   *\n   * @type {Object}\n   */\n  var settings = Glide.settings;\n\n  /**\n   * Holds reference to breakpoints object in settings. Sorts breakpoints\n   * from smaller to larger. It is required in order to proper\n   * matching currently active breakpoint settings.\n   *\n   * @type {Object}\n   */\n  var points = sortBreakpoints(settings.breakpoints);\n\n  /**\n   * Cache initial settings before overwritting.\n   *\n   * @type {Object}\n   */\n  var defaults = _extends({}, settings);\n\n  var Breakpoints = {\n    /**\n     * Matches settings for currectly matching media breakpoint.\n     *\n     * @param {Object} points\n     * @returns {Object}\n     */\n    match: function match(points) {\n      if (typeof window.matchMedia !== 'undefined') {\n        for (var point in points) {\n          if (points.hasOwnProperty(point)) {\n            if (window.matchMedia('(max-width: ' + point + 'px)').matches) {\n              return points[point];\n            }\n          }\n        }\n      }\n\n      return defaults;\n    }\n  };\n\n  /**\n   * Overwrite instance settings with currently matching breakpoint settings.\n   * This happens right after component initialization.\n   */\n  _extends(settings, Breakpoints.match(points));\n\n  /**\n   * Update glide with settings of matched brekpoint:\n   * - window resize to update slider\n   */\n  Binder.on('resize', window, throttle(function () {\n    Glide.settings = mergeOptions(settings, Breakpoints.match(points));\n  }, Glide.settings.throttle));\n\n  /**\n   * Resort and update default settings:\n   * - on reinit via API, so breakpoint matching will be performed with options\n   */\n  Events.on('update', function () {\n    points = sortBreakpoints(points);\n\n    defaults = _extends({}, settings);\n  });\n\n  /**\n   * Unbind resize listener:\n   * - on destroying, to bring markup to its initial state\n   */\n  Events.on('destroy', function () {\n    Binder.off('resize', window);\n  });\n\n  return Breakpoints;\n}\n\nvar COMPONENTS = {\n  // Required\n  Html: Html,\n  Translate: Translate,\n  Transition: Transition,\n  Direction: Direction,\n  Peek: Peek,\n  Sizes: Sizes,\n  Gaps: Gaps,\n  Move: Move,\n  Clones: Clones,\n  Resize: Resize,\n  Build: Build,\n  Run: Run,\n\n  // Optional\n  Swipe: Swipe,\n  Images: Images,\n  Anchors: Anchors,\n  Controls: Controls,\n  Keyboard: Keyboard,\n  Autoplay: Autoplay,\n  Breakpoints: Breakpoints\n};\n\nvar Glide$1 = function (_Core) {\n  inherits(Glide$$1, _Core);\n\n  function Glide$$1() {\n    classCallCheck(this, Glide$$1);\n    return possibleConstructorReturn(this, (Glide$$1.__proto__ || Object.getPrototypeOf(Glide$$1)).apply(this, arguments));\n  }\n\n  createClass(Glide$$1, [{\n    key: 'mount',\n    value: function mount() {\n      var extensions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      return get(Glide$$1.prototype.__proto__ || Object.getPrototypeOf(Glide$$1.prototype), 'mount', this).call(this, _extends({}, COMPONENTS, extensions));\n    }\n  }]);\n  return Glide$$1;\n}(Glide);\n\nexport default Glide$1;\n","export default [\n  'build.after',\n  'build.before',\n  'mount.after',\n  'mount.before',\n  'move.after',\n  'move',\n  'pause',\n  'play',\n  'resize',\n  'run.after',\n  'run.before',\n  'run.end',\n  'run.offset',\n  'run.start',\n  'run',\n  'swipe.end',\n  'swipe.move',\n  'swipe.start',\n  'translate.jump',\n  'update'\n]\n","import Glide from '@glidejs/glide'\nimport '@glidejs/glide/dist/css/glide.core.min.css'\nimport events from './events'\n\nexport default {\n  name: 'VueGlide',\n\n  model: {\n    prop: 'active',\n    event: 'change'\n  },\n\n  props: {\n    type: {\n      type: String,\n      default: 'slider'\n    },\n    startAt: {\n      type: Number,\n      default: 0\n    },\n    perView: {\n      type: Number,\n      default: 3\n    },\n    focusAt: {\n      type: [String, Number],\n      default: 0\n    },\n    gap: {\n      type: Number,\n      default: 10\n    },\n    autoplay: {\n      type: [Number, Boolean],\n      default: false\n    },\n    hoverpause: {\n      type: Boolean,\n      default: true\n    },\n    keyboard: {\n      type: Boolean,\n      default: true\n    },\n    bound: {\n      type: Boolean,\n      default: false\n    },\n    swipeThreshold: {\n      type: [Number, Boolean],\n      default: 80\n    },\n    dragThreshold: {\n      type: [Number, Boolean],\n      default: 120\n    },\n    perTouch: {\n      type: [Number, Boolean],\n      default: false\n    },\n    touchRatio: {\n      type: Number,\n      default: 0.5\n    },\n    touchAngle: {\n      type: Number,\n      default: 45\n    },\n    animationDuration: {\n      type: Number,\n      default: 400\n    },\n    rewind: {\n      type: Boolean,\n      default: true\n    },\n    rewindDuration: {\n      type: Number,\n      default: 800\n    },\n    animationTimingFunc: {\n      type: String,\n      default: 'cubic-bezier(0.165, 0.840, 0.440, 1.000)'\n    },\n    direction: {\n      type: String,\n      default: 'ltr'\n    },\n    peek: {\n      type: [Number, Object],\n      default: 0\n    },\n    breakpoints: {\n      type: Object,\n      default: () => {}\n    },\n    classes: {\n      type: Object,\n      default: () => {}\n    },\n    throttle: {\n      type: Number,\n      default: 25\n    },\n    toSlideByClick: {\n      type: Boolean,\n      default: false\n    },\n    bullet: {\n      type: Boolean,\n      default: false\n    },\n    options: {\n      type: Object,\n      default: () => {}\n    },\n    active: {\n      type: Number,\n      default: null\n    }\n  },\n\n  provide () {\n    return {\n      root: this\n    }\n  },\n\n  data () {\n    return {\n      glide: undefined\n    }\n  },\n\n  render (h) {\n    let control\n    let bullet\n    let buttons = []\n    // Pass only vue-glide-slide\n    let slides = this.$slots.default.filter(\n      c => c.componentOptions && c.componentOptions.tag === 'vue-glide-slide'\n    )\n\n    if (this.$slots.control && this.$slots.control.length) {\n      control = <div data-glide-el=\"controls\">{this.$slots.control}</div>\n    }\n\n    if (this.bullet) {\n      for (let i = 0; i < this.slidesCount; i++) {\n        buttons.push(\n          h('button', {\n            key: i,\n            attrs: {\n              'data-glide-dir': '=' + i,\n              class: 'glide__bullet'\n            }\n          })\n        )\n      }\n\n      bullet = (\n        <div class=\"glide__bullets\" data-glide-el=\"controls[nav]\">\n          {buttons}\n        </div>\n      )\n    }\n\n    return (\n      <div class=\"glide\">\n        <div class=\"glide__track\" data-glide-el=\"track\">\n          <ul class=\"glide__slides\">{slides}</ul>\n        </div>\n        {control}\n        {bullet}\n      </div>\n    )\n  },\n\n  watch: {\n    active () {\n      this.changeSlideByModel()\n    }\n  },\n\n  computed: {\n    currentSlide () {\n      return this.glide.index\n    },\n    slidesCount () {\n      return this.$slots.default.filter(\n        c => c.componentOptions && c.componentOptions.tag === 'vue-glide-slide'\n      ).length\n    }\n  },\n\n  mounted () {\n    this.init()\n  },\n\n  methods: {\n    /**\n     * Initialization glide\n     */\n    init () {\n      const defaultClasses = {\n        direction: {\n          ltr: 'glide--ltr',\n          rtl: 'glide--rtl'\n        },\n        slider: 'glide--slider',\n        carousel: 'glide--carousel',\n        swipeable: 'glide--swipeable',\n        dragging: 'glide--dragging',\n        cloneSlide: 'glide__slide--clone',\n        activeNav: 'glide__bullet--active',\n        activeSlide: 'glide__slide--active',\n        disabledArrow: 'glide__arrow--disabled'\n      }\n\n      const initOptions = Object.assign({}, this.$props)\n      // Remove additional props 'options'\n      delete initOptions.options\n\n      initOptions.classes = Object.assign(defaultClasses, this.classes)\n\n      const mergedOptions = Object.assign(initOptions, this.options)\n\n      if (this.toSlideByClick) {\n        this.goToSlideByClick()\n      }\n\n      this.glide = new Glide(this.$el, mergedOptions)\n      this.eventConnector(events)\n      this.glide.mount()\n      this.bindModel()\n      this.changeSlideByModel()\n    },\n    /**\n     * Go to the slide\n     * @param {string} pattern - special format glide.js api\n     * Available pattern:\n     * * > - Move one forward\n     * * < - Move one backward\n     * * ={i} - Go to {i} zero-based slide (eq. '=1', will go to second slide)\n     * * >> - Rewinds to end (last slide)\n     * * << - Rewinds to start (first slide)\n     */\n    go (pattern) {\n      this.glide.go(pattern)\n    },\n    /**\n     * Go to the slide by click on slide\n     */\n    goToSlideByClick () {\n      this.$on('glide:slide-click', e => this.go(`=${e}`))\n    },\n    /**\n     * Pass glide events to Vue events\n     * @param {array} - glide events\n     */\n    eventConnector (events) {\n      events.map(event => {\n        this.glide.on(event, e => {\n          const emitter = event.replace(/\\./, '-')\n          this.$emit(`glide:${emitter}`, e)\n        })\n      })\n    },\n    /**\n     * Bind v-model\n     */\n    bindModel () {\n      this.$on('glide:move', () => {\n        this.$emit('change', this.currentSlide)\n      })\n    },\n    /**\n     * Change slide by v-model\n     */\n    changeSlideByModel () {\n      if (this.active === null) return\n      if (this.active > this.slidesCount - 1) {\n        return this.go(`=${this.slidesCount - 1}`)\n      }\n      if (this.active < 0) {\n        return this.go('=0')\n      }\n      this.go(`=${this.active}`)\n    }\n  }\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('li',{staticClass:\"glide__slide\",attrs:{\"data-glide-index\":_vm.index},on:{\"click\":function($event){_vm.root.$emit('glide:slide-click')}}},[_vm._t(\"default\")],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <li\n    class=\"glide__slide\"\n    @click=\"root.$emit('glide:slide-click')\"\n    :data-glide-index=\"index\">\n    <slot></slot>\n  </li>\n</template>\n\n<script>\nexport default {\n  name: 'VueGlideSlide',\n\n  inject: ['root'],\n\n  computed: {\n    /**\n     * Get index of current slide\n     */\n    index () {\n      return this.$parent.$children.findIndex(slide => slide._uid === this._uid)\n    }\n  }\n}\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GlideSlide.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GlideSlide.vue?vue&type=script&lang=js&\"","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","import { render, staticRenderFns } from \"./GlideSlide.vue?vue&type=template&id=e112506c&\"\nimport script from \"./GlideSlide.vue?vue&type=script&lang=js&\"\nexport * from \"./GlideSlide.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Glide from './components/Glide'\nimport GlideSlide from './components/GlideSlide'\n\nexport default {\n  install (Vue, options) {\n    Vue.component(Glide.name, Glide)\n    Vue.component(GlideSlide.name, GlideSlide)\n  }\n}\n\nexport { Glide, GlideSlide }\n","import './setPublicPath'\nimport mod from '~entry'\nexport default mod\nexport * from '~entry'\n"],"sourceRoot":""}